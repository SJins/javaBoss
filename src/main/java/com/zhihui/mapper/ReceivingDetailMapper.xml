<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhihui.dao.ReceivingDetailMapper">
  <resultMap id="BaseResultMap" type="com.zhihui.entity.ReceivingDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="INTEGER" property="phone" />
    <result column="counntry" jdbcType="VARCHAR" property="counntry" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, address, phone, counntry, city, flag, uid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_receiving_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_receiving_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhihui.entity.ReceivingDetail">
    insert into t_receiving_detail (id, name, address, 
      phone, counntry, city, 
      flag, uid)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{phone,jdbcType=INTEGER}, #{counntry,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{flag,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zhihui.entity.ReceivingDetail">
    insert into t_receiving_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="counntry != null">
        counntry,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="uid != null">
        uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="counntry != null">
        #{counntry,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhihui.entity.ReceivingDetail">
    update t_receiving_detail
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="counntry != null">
        counntry = #{counntry,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhihui.entity.ReceivingDetail">
    update t_receiving_detail
    set name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=INTEGER},
      counntry = #{counntry,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>